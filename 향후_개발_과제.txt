# 향후 개발 과제 (2025-07-27 기준)

## 현재까지의 진행 상황 요약

- **핵심 기능 완성:** 월력/주간 뷰, Google/로컬 캘린더 연동, 상세한 반복 일정 기능 등 전문적인 캘린더 앱이 갖춰야 할 대부분의 핵심 기능을 구현 완료.
- **UX 개선:** 직관적인 반복 일정 설정 UI, 반복 일정 시각적 표시(🔄), 수정/삭제 시 경고 메시지 등 사용자 편의성 향상.
- **안정성 확보:** DataManager에 대한 단위 테스트를 추가하여 프로젝트의 안정성을 높이고 향후 개발을 위한 안전망 마련.

## 앞으로 개발할 과제 (디테일 개선)

이제 큰 기능들은 대부분 구현되었으므로, 애플리케이션의 완성도를 높이는 "디테일 개선" 작업에 집중하는 것이 좋습니다.

---

### **추천 1순위: 설정 기능 강화 (난이도: 하)**

사용자에게 더 많은 제어권을 부여하여 만족도를 높일 수 있는 기능들입니다. 비교적 난이도가 낮아 빠르게 구현 가능합니다.

1.  **테마 선택 기능:**
    - **내용:** `SettingsWindow`에 라이트/다크 테마를 선택할 수 있는 옵션을 추가합니다. 현재의 다크 테마 외에 밝은 테마 스타일시트를 새로 정의하고, 선택에 따라 실시간으로 앱 전체의 스타일이 변경되도록 구현합니다.
    - **기대 효과:** 사용자의 시각적 선호도에 맞춘 개인화 환경을 제공합니다.

2.  **기본값 설정 추가:**
    - **내용:** `SettingsWindow`에 '기본 알림 시간'(예: 10분 전), '기본 이벤트 기간'(예: 1시간) 등 사용자가 새 일정을 만들 때 자주 사용할 만한 값들을 미리 설정하는 옵션을 추가합니다.
    - **기대 효과:** 일정 생성 시 반복적인 입력을 줄여 사용자 편의성을 높입니다.

---

### **추천 2순위: 핵심 편의 기능 추가 (난이도: 중)**

캘린더 앱의 활용성을 한 단계 끌어올릴 수 있는 중요한 기능들입니다.

3.  **일정 검색 기능:**
    - **내용:** 메인 화면에 검색창(`QLineEdit`)을 추가합니다. 사용자가 키워드를 입력하면, `DataManager`가 관리하는 모든 이벤트(캐시 및 로컬 DB)의 제목과 설명을 검색하여 일치하는 일정 목록을 별도의 팝업창에 보여줍니다.
    - **기대 효과:** 과거의 일정을 빠르게 찾거나, 특정 키워드와 관련된 모든 일정을 한눈에 볼 수 있어 매우 실용적입니다.

4.  **알림 기능 구현:**
    - **내용:** 이벤트 데이터에 포함된 알림(`reminders`) 정보를 활용합니다. 백그라운드 스레드나 타이머를 이용해 주기적으로 다가오는 이벤트를 확인하고, 설정된 시간이 되면 데스크톱 알림(예: PyQt6의 `QSystemTrayIcon` 활용)을 표시합니다.
    - **기대 효과:** 사용자가 중요한 일정을 놓치지 않도록 도와주는 핵심적인 캘린더 기능입니다.

---

### **추천 3순위: 고급 기능 심화 (난이도: 상)**

반복 일정 관리 기능을 Google 캘린더 수준으로 끌어올리는 전문적인 기능입니다.

5.  **반복 일정 수정/삭제 옵션 세분화:**
    - **내용:** 현재는 반복 일정을 수정/삭제하면 무조건 전체 시리즈가 영향을 받습니다. 이를 개선하여, 수정/삭제 시 **"이 일정만", "향후 모든 일정", "전체 반복 일정"** 중 하나를 선택할 수 있는 옵션을 제공합니다.
    - **기대 효과:** 반복 일정 관리에 대한 매우 정교하고 유연한 제어권을 사용자에게 제공하여, 앱의 전문성을 극대화합니다.
    - **주의:** 데이터 처리 로직이 매우 복잡해지므로, 신중한 설계와 충분한 테스트가 필요합니다.