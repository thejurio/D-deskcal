# 향후 개발 과제 추천 (2025-07-27 기준)

## 현재까지의 진행 상황 요약

- **1순위 (UI/UX 개선):** 대부분 완료 (툴팁, 삭제 창, 셀 디자인, 날짜 선택 방식 등)
- **2순위 (핵심 기능 강화):** '주간 뷰' 기능의 기본 골격 및 디테일 완성
- **기타 개선:** '오늘' 버튼 추가, 캐시 보호 정책 강화, 버튼 인터랙션 강화 등

## 앞으로 개발할 과제 분석 및 추천

현재 프로젝트는 핵심적인 뷰(월/주)를 갖추고 안정적으로 동작하는 단계에 이르렀습니다. 이제는 **"기능의 깊이"**를 더하고 **"사용자의 편의성"**을 극대화하는 방향으로 나아가는 것이 좋습니다.

---

### 추천 1순위: 핵심 편의 기능 완성

가장 시급하고 중요한 것은 사용자가 캘린더 앱을 사용하면서 당연히 기대하는 기본 기능들을 완성하는 것입니다.

1.  **주간 뷰에서 일정 추가/수정/삭제:**
    - **현재 상태:** 월력 뷰처럼 빈 공간을 더블클릭하거나 우클릭해서 새 일정을 추가하는 기능이 아직 없습니다.
    - **추천 이유:** 주간 뷰가 반쪽짜리 기능이 되지 않으려면 CRUD(만들기, 읽기, 수정, 삭제)가 완벽하게 지원되어야 합니다. 사용 흐름이 끊기지 않도록 하는 가장 중요한 작업입니다.
    - **난이도:** 중

2.  **월력 뷰 스크롤 기능:**
    - **현재 상태:** 한 날짜에 일정이 많아지면 셀 밖으로 넘어가 보이지 않습니다.
    - **추천 이유:** 데이터가 많아졌을 때 정보가 유실되지 않도록 보장하는 필수적인 기능입니다. 주간 뷰처럼 마우스 휠이나 드래그로 셀 내부를 스크롤할 수 있게 만들어야 합니다.
    - **난이도:** 중

---

### 추천 2순위: 고급 기능 및 설정

핵심 편의 기능이 완성되면, 앱을 더 강력하고 개인화할 수 있는 고급 기능들을 추가합니다.

3.  **스마트한 반복 일정:**
    - **추천 이유:** 주간/월간 반복 회의, 생일 등 실제 사용 시나리오에서 가장 강력한 기능입니다. 이 기능의 유무가 캘린더 앱의 전문성을 결정합니다. 다만, `RRULE` 파싱 등 기술적으로 가장 복잡하고 시간이 많이 소요됩니다.
    - **난이도:** 최상

4.  **상세 설정 추가:**
    - **세부 내용:** 전체 투명도 조절 슬라이더, 테마 선택(라이트/다크), 시작 요일 변경, 캘린더별 색상 지정 실시간 적용 등
    - **추천 이유:** 사용자에게 더 많은 제어권을 부여하여 만족도를 높일 수 있습니다. 비교적 난이도가 낮아 빠르게 구현 가능합니다.
    - **난이도:** 하 ~ 중

---

### 추천 3순위: 마무리 및 배포

모든 기능이 완성된 후, 다른 사람들이 쉽게 사용할 수 있도록 준비하는 단계입니다.

5.  **코드 품질 향상 및 배포 준비:**
    - **세부 내용:** `DataManager` 등 핵심 로직에 대한 단위 테스트 추가 작성, `pyinstaller`를 이용한 실행 파일(`.exe`) 생성, 앱 아이콘 적용.
    - **추천 이유:** 프로젝트의 안정성을 보장하고, 개발자 없이도 누구나 앱을 사용할 수 있게 하여 프로젝트를 완성시키는 마지막 단계입니다.
    - **난이도:** 하

---

### 최종 추천

**"1. 주간 뷰에서 일정 추가/수정/삭제"** 작업을 가장 먼저 진행하는 것을 강력하게 추천합니다.
